name: "VGG_ILSVRC_19_layer"
layer {
	name: "ilsvrc2012"
	type: "Data"
	top: "data"
	top: "label"
	transform_param {
		mirror: true
		crop_size : 224
		mean_file: "../../data/ilsvrc12/imagenet_mean.binaryproto"
	}
	data_param {
		source: "/storage/datasets/ILSVRC2012/train_lmdb"
		backend: LMDB
		batch_size: 64
	}
	include: { phase: TRAIN }
}
layer {
	name: "ilsvrc2012"
	type: "Data"
	top: "data"
	top: "label"
	transform_param {
		mirror: true
		crop_size : 224
		mean_file: "../../data/ilsvrc12/imagenet_mean.binaryproto"
	}
	data_param {
		source: "/storage/datasets/ILSVRC2012/val_lmdb"
		backend: LMDB
		batch_size: 10
	}
	include: { phase: TEST }
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU" 
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution" 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU" 
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling" 
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "conv3_4"
  name: "conv3_4"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_4"
  top: "conv3_4"
  name: "relu3_4"
  type: "ReLU"
}
layer {
  bottom: "conv3_4"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "conv4_4"
  name: "conv4_4"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_4"
  top: "conv4_4"
  name: "relu4_4"
  type: "ReLU"
}
layer {
  bottom: "conv4_4"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "conv5_4"
  name: "conv5_4"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_4"
  top: "conv5_4"
  name: "relu5_4"
  type: "ReLU"
}
layer {
  bottom: "conv5_4"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
	name: "conv6"
	type: "Convolution"
	bottom: "pool5"
	top: "conv6"
	param {
		lr_mult: 100
		decay_mult: 1
	}
	param {
		lr_mult: 100
		decay_mult: 0
	}
	convolution_param {
		num_output: 1024
    	pad: 1
    	kernel_size: 3
		weight_filler {
    	  type: "gaussian"
    	  std: 0.05
    	}
    	bias_filler {
    	  type: "constant"
    	  value: 0
    	}
	}
}
layer {
  name: "relu_conv6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}
layer {
	name: "cccp"
	type: "Convolution"
	bottom: "conv6"
	top: "cccp"
	param {
		lr_mult: 1000
		decay_mult: 1
	}
	param {
		lr_mult: 1000
		decay_mult: 0
	}
	convolution_param {
		num_output:1024
		group: 1
		kernel_size: 1
		weight_filler {
    	  type: "gaussian"
    	  std: 0.05
    	}
    	bias_filler {
    	  type: "constant"
    	  value: 0
    	}
	}
}
layer {
  name: "relu_cccp"
  type: "ReLU"
  bottom: "cccp"
  top: "cccp"
}
layer {
  name: "cccp2"
  type: "Convolution"
  bottom: "cccp"
  top: "cccp2"
  param {
	  lr_mult: 100
	  decay_mult : 1
  }
  param {
	  lr_mult: 100
	  decay_mult : 0
  }
  convolution_param {
    num_output: 1000
    group: 1
    kernel_size: 1
	weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp2"
  type: "ReLU"
  bottom: "cccp2"
  top: "cccp2"
}
layer {
  name: "pool6"
  type: "Pooling" 
  bottom: "cccp2"
  top: "pool6"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  bottom: "pool6"
  bottom: "label"
  top: "loss"
  name: "loss"
  type: "SoftmaxWithLoss" 
}
layer {
  bottom: "pool6"
  bottom: "label"
  top: "accuracy"
  name: "Accuracy"
  type: "Accuracy" 
  accuracy_param {
	  top_k:1
  }
  include: { phase: TEST }
}
