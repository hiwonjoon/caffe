name: "CIFAR100_nin"
input: "data"
input_dim: 10
input_dim: 3
input_dim: 26
input_dim: 26 
layer {
  name: "conv1"
  type: "Convolution" 
  bottom: "data"
  top: "conv1"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 5
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "cccp1"
  type: "Convolution" 
  bottom: "conv1"
  top: "cccp1"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 160
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp1"
  type: "ReLU"
  bottom: "cccp1"
  top: "cccp1"
}
layer {
  name: "cccp2"
  type: "Convolution" 
  bottom: "cccp1"
  top: "cccp2"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 96
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp2"
  type: "ReLU"
  bottom: "cccp2"
  top: "cccp2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "cccp2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "drop3"
  type: "Dropout"
  bottom: "pool1"
  top: "pool1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "conv2"
  type: "Convolution" 
  bottom: "pool1"
  top: "conv2"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "cccp3"
  type: "Convolution"
  bottom: "conv2"
  top: "cccp3"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp3"
  type: "ReLU" 
  bottom: "cccp3"
  top: "cccp3"
}
layer {
  name: "cccp4"
  type: "Convolution"
  bottom: "cccp3"
  top: "cccp4"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp4"
  type: "ReLU"
  bottom: "cccp4"
  top: "cccp4"
}
layer {
  name: "pool2"
  type: "Pooling" 
  bottom: "cccp4"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "pool2"
  top: "pool2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "conv3"
  type: "Convolution" 
  bottom: "pool2"
  top: "conv3"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "cccp5"
  type: "Convolution" 
  bottom: "conv3"
  top: "cccp5"
  param {
	  lr_mult: 1
	  decay_mult: 1
  }
  param {
	  lr_mult: 2
	  decay_mult: 0
  }
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp5"
  type: "ReLU"
  bottom: "cccp5"
  top: "cccp5"
}
layer {
  name: "cccp6"
  type: "Convolution"
  bottom: "cccp5"
  top: "cccp6"
  param {
	  lr_mult: 0.1
	  decay_mult: 1
  }
  param {
	  lr_mult: 0.1
	  decay_mult: 0
  }
  convolution_param {
    num_output: 100
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp6"
  type: "ReLU"
  bottom: "cccp6"
  top: "cccp6"
}
layer {
	name: "super_category"
	type: "SuperCategoryFM"
	bottom: "cccp6"
	top: "layer1"
	top: "layer2"
	eltwise_param {
		operation : MIN
	}
  super_category_param{
	  root {
		children: {
			children: {
				label: 30 # dolphin
			}
			children: {
				label: 95 # whale
			}
			children: {
				label: 73 # shark
			}
		}
		children: {
			children: {
				label: 1 # aquarium_fish
			}
			children: {
				label: 91 # trout
			}
			children: {
				label: 32 # flatfish
			}
		}
		children: {
			children: {
				label: 54 # orchid
			}
			children: {
				label: 62 # poppy
			}
			children: {
				label: 70 # rose
			}
			children: {
				label: 82 # sunflower
			}
			children: {
				label: 92 # tulip
			}
			children: {
				label: 14 # butterfly
			}
		}
		children: {
			children: {
				label: 9 # bottle
			}
			children: {
				label: 10 # bowl
			}
			children: {
				label: 16 # can
			}
			children: {
				label: 28 # cup
			}
			children: {
				label: 61 # plate
			}
		}
		children: {
			children: {
				label: 0 # apple
			}
			children: {
				label: 51 # mushroom
			}
			children: {
				label: 53 # orange
			}
			children: {
				label: 57 # pear
			}
			children: {
				label: 83 # sweet_pepper
			}
		}
		children: {
			children: {
				label: 39 # keyboard
			}
			children: {
				label: 86 # telephone
			}
		}
		children: {
			children: {
				label: 5 # bed
			}
			children: {
				label: 20 # chair
			}
			children: {
				label: 25 # couch
			}
			children: {
				label: 84 # table
			}
			children: {
				label: 94 # wardrobe
			}
			children: {
				label: 87 # television
			}
		}
		children: {
			children: {
				label: 6 # bee
			}
			children: {
				label: 7 # beetle
			}
			children: {
				label: 24 # cockroach
			}
			children: {
				label: 45 # lobster
			}
		}
		children: {
			children: {
				label: 3 # bear
			}
			children: {
				label: 42 # leopard
			}
			children: {
				label: 43 # lion
			}
			children: {
				label: 88 # tiger
			}
			children: {
				label: 97 # wolf
			}
		}
		children: {
			children: {
				label: 17 # castle
			}
			children: {
				label: 37 # house
			}
			children: {
				label: 76 # skyscraper
			}
			children: {
				label: 90 # train
			}
		}
		children: {
			children: {
				label: 23 # cloud
			}
			children: {
				label: 33 # forest
			}
			children: {
				label: 49 # mountain
			}
			children: {
				label: 60 # plain
			}
			children: {
				label: 71 # sea
			}
		}
		children: {
			children: {
				label: 15 # camel
			}
			children: {
				label: 19 # cattle
			}
			children: {
				label: 21 # chimpanzee
			}
			children: {
				label: 31 # elephant
			}
			children: {
				label: 38 # kangaroo
			}
			children: {
				label: 29 # dinosaur
			}
		}
		children: {
			children: {
				label: 34 # fox
			}
			children: {
				label: 63 # porcupine
			}
			children: {
				label: 64 # possum
			}
			children: {
				label: 66 # raccoon
			}
			children: {
				label: 75 # skunk
			}
		}
		children: {
			children: {
				label: 77 # snail
			}
			children: {
				label: 99 # worm
			}
			children: {
				label: 78 # snake
			}
			children: {
				label: 18 # caterpillar
			}
			children: {
				label: 67 # ray
			}
		}
		children: {
			children: {
				label: 2 # baby
			}
			children: {
				label: 11 # boy
			}
			children: {
				label: 35 # girl
			}
			children: {
				label: 46 # man
			}
			children: {
				label: 98 # woman
			}
		}
		children: {
			children: {
				label: 27 # crocodile
			}
			children: {
				label: 44 # lizard
			}
			children: {
				label: 93 # turtle
			}
		}
		children: {
			children: {
				label: 36 # hamster
			}
			children: {
				label: 50 # mouse
			}
			children: {
				label: 65 # rabbit
			}
			children: {
				label: 74 # shrew
			}
			children: {
				label: 80 # squirrel
			}
			children: {
				label: 4 # beaver
			}
			children: {
				label: 55 # otter
			}
		}
		children: {
			children: {
				label: 47 # maple_tree
			}
			children: {
				label: 52 # oak_tree
			}
			children: {
				label: 56 # palm_tree
			}
			children: {
				label: 59 # pine_tree
			}
			children: {
				label: 96 # willow_tree
			}
		}
		children: {
			children: {
				label: 81 # streetcar
			}
			children: {
				label: 13 # bus
			}
			children: {
				label: 48 # motorcycle
			}
			children: {
				label: 68 # road
			}
		}
		children: {
			children: {
				label: 41 # lawn_mower
			}
			children: {
				label: 58 # pickup_truck
			}
			children: {
				label: 85 # tank
			}
			children: {
				label: 89 # tractor
			}
		}
		children: {
			children: {
				label: 8 # bicycle
			}
			children: {
				label: 22 # clock
			}
		}
		children: {
			children: {
				label: 26 # crab
			}
			children: {
				label: 79 # spider
			}
		}
		children: {
			children: {
				label: 12 # bridge
			}
			children: {
				label: 72 # seal
			}
		}
		children: {
			children: {
				label: 69 # rocket
			}
		}
		children: {
			children: {
				label: 40 # lamp
			}
		}
	  }
  }
}
layer {
  name: "pool3"
  type: "Pooling" 
  bottom: "layer1"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 1
  }
}
layer {
  name: "pool4"
  type: "Pooling" 
  bottom: "layer2"
  top: "pool4"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 1
  }
}
layer {
  name: "loss1"
  type: "Softmax"
  bottom: "pool4"
  top: "loss1"
  loss_weight: 0.8
}
layer {
  name: "loss2_supercategory"
  type: "Softmax"
  bottom: "pool3"
  top: "loss2_supercategory"
  loss_weight: 0.2
}
